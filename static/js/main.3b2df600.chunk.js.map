{"version":3,"sources":["Home.js","Faq.js","About.js","Contributing.js","AppRouter.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","id","href","Faq","About","Contributing","Translating","AppRouter","react_router_dom","to","react_router","path","exact","component","Footer","App","src_AppRouter_0","src_Footer_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b2df600.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css'\n\nconst Home = () =>\n  <div className=\"Home-container\">\n    <div id=\"front-text\">\n      <h1>Welcome to Kaiwa Hour</h1>\n      <p id=\"meeting-time\">Meetings are held weekly <b>Tuesday, 5-7 PM</b> in <b>Olson 53a</b> at UC Davis.</p>\n    </div>\n    <div id=\"front-images\">\n      <h3>Images and More</h3>\n      <p>(A carousel of event images, your photographs, or something else can be put here.)</p>\n      <p>Photo by <a href=\"https://unsplash.com/@gaspanik\">Masaaki Komori</a> on Unsplash</p>\n    </div>\n  </div>\n\nexport default Home;","import React from 'react';\n\nconst Faq = () =>\n  <div className=\"App-content\">\n    <h2>Frequently Asked Questions (FAQ)</h2>\n    <p>So you wanna know more about Kaiwa Hour...</p>\n  </div>\n\nexport default Faq;","import React from 'react';\n\nconst About = () =>\n  <div className=\"App-content\">\n    <h2>About Kaiwa Hour</h2>\n    <p>\n      Kaiwa Hour began approximately 15 years ago with about 40 students from a\n      Japanese university visiting the USA who wanted to become tutors. Since there\n      was not enough room for all these students to serve in this way, the Japanese\n      department at UCD began a new class under the name of “coffee hour.” Since\n       then, that class has grown into Kaiwa Hour (\"Japanese Conversation Hour\").\n     </p>\n    <p>\n      Kaiwa Hour is a place for Japanese and American students to meet and openly\n      communicate. We hope that Kaiwa Hour continues to be a place for fostering\n      conversation and understanding as it has been for many generations of\n      students in the past.\n    </p> \n  </div>\n\nexport default About;","import React from 'react';\n\nconst Contributing = () =>\n  <div className=\"App-content\">\n    <h2>Contributing</h2>\n    <p>How can you get involved with Kaiwa Hour?</p>\n    <ul>\n      <li>Come to our weekly meetings</li>\n      <li>Share Kaiwa events/announcements on social media</li>\n      <li>Participate on our Discord server</li>\n    </ul>\n\n    <p>\n      Plan your own social gatherings on the <a \n      href=\"https://www.facebook.com/groups/kaiwahour/\">UCD Kaiwa Hour \n      (Social)</a> page.\n    </p>\n    <h3>More Opportunities</h3>\n    <p>\n      Are you a developer? Join us on <a \n      href=\"https://github.com/kaiwahour\">Github</a>.</p>\n  </div>\n\nexport default Contributing;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './AppRouter.css'\n\n// These should each return a single Component/function representing the page\nimport Home from './Home'\nimport Faq from './Faq'\nimport About from './About'\nimport Contributing from './Contributing'\n\nconst Translating =  () =>\n  <div>\n    <h2>Translating</h2>\n    <p>\n      We willl provide this website in multiple languages, translated by human \n      beings with idiomatic flair!\n    </p>\n  </div>\n\nconst AppRouter = () => {\n  return (\n    <Router className=\"appRouter\">\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/faq/\">FAQ</Link>\n            </li>\n            <li>\n              <Link to=\"/about/\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/contributing/\">Contributing</Link>\n            </li>\n\n          </ul>\n        </nav>\n\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/faq/\" component={Faq} />\n        <Route path=\"/about/\" component={About} />\n        <Route path=\"/contributing/\" component={Contributing} />\n        <Route path=\"/translating/\" component={Translating} />\n      </div>\n    </Router>\n\n\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () =>\n  <div id=\"footer\">\n    <div id=\"social-media\" className=\"footerBlock\">\n      <p>Find us on social media</p>\n      <ul>\n        <li><a href=\"https://twitter.com/kaiwahour\">Twitter</a></li>\n        <li><a href=\"https://www.facebook.com/kaiwahour/\">Facebook</a></li>\n        <li><a href=\"https://discord.gg/fra3Vym\">Discord</a></li>\n      </ul>\n    </div>\n\n    <div id=\"sponsors-and-affiliates\" className=\"footerBlock\">\n      <p>(Sponsors and Affiliates)</p>\n    </div>\n\n    <div id=\"language-switcher\" className=\"footerBlock\">\n      <p>This page in other languages</p>\n      <ul>\n        <li><a href=\"/translating?lang=jp\">日本語</a></li>\n        <li><a href=\"/translating?lang=zh\">中文</a></li>\n        <li><a href=\"/translating?lang=ko\">한국어</a></li>\n        <li><a href=\"/translating?lang=ko\">Español</a></li>\n      </ul>\n    </div>\n    <div id=\"legal-stuff\" className=\"footerBlock\">\n      <p>Last updated May 2019</p>\n      <p>Copyright 2019</p>\n    </div>\n  </div>\n\nexport default Footer; ","import React from 'react';\nimport './App.css';\n\nimport AppRouter from './AppRouter';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}